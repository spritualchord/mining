import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import DBSCAN
from sklearn.preprocessing import StandardScaler
from sklearn.datasets import load_iris

# Step 1: Load the Mall_Customers dataset
# Assuming the dataset is in a CSV file, replace with your actual file path
df = pd.read_csv('Mall_Customers.csv')

# Show the first few rows of the dataset
print("Mall_Customers Dataset:")
print(df.head())

# Step 2: Preprocessing the data for DBSCAN clustering (selecting relevant features)
X_mall = df[['Age', 'Annual Income (k$)']].values

# Standardize the data
X_scaled_mall = StandardScaler().fit_transform(X_mall)

# Step 3: Apply DBSCAN with initial parameters on Mall_Customers dataset
dbscan_mall = DBSCAN(eps=0.5, min_samples=5)
y_dbscan_mall = dbscan_mall.fit_predict(X_scaled_mall)

# Add the cluster labels to the dataset
df['Cluster'] = y_dbscan_mall

# Visualize the clusters for Mall_Customers dataset
plt.figure(figsize=(8,6))
plt.scatter(df['Age'], df['Annual Income (k$)'], c=df['Cluster'], cmap='viridis')
plt.xlabel('Age')
plt.ylabel('Annual Income (k$)')
plt.title('DBSCAN Clustering on Mall_Customers (eps=0.5, min_samples=5)')
plt.show()

# Step 4: Modify DBSCAN parameters and observe the effect on Mall_Customers dataset
dbscan_mall_modified = DBSCAN(eps=0.3, min_samples=10)
y_dbscan_mall_modified = dbscan_mall_modified.fit_predict(X_scaled_mall)

# Visualize the clusters with modified parameters for Mall_Customers dataset
plt.figure(figsize=(8,6))
plt.scatter(df['Age'], df['Annual Income (k$)'], c=y_dbscan_mall_modified, cmap='viridis')
plt.xlabel('Age')
plt.ylabel('Annual Income (k$)')
plt.title('DBSCAN Clustering on Mall_Customers (eps=0.3, min_samples=10)')
plt.show()

# Step 5: Apply DBSCAN on the Iris dataset
iris = load_iris()
X_iris = iris.data

# Standardize the Iris data
X_iris_scaled = StandardScaler().fit_transform(X_iris)

# Apply DBSCAN on Iris dataset
dbscan_iris = DBSCAN(eps=0.5, min_samples=5)
y_dbscan_iris = dbscan_iris.fit_predict(X_iris_scaled)

# Visualize the clusters for Iris dataset
plt.figure(figsize=(8,6))
plt.scatter(X_iris[:, 0], X_iris[:, 1], c=y_dbscan_iris, cmap='viridis')
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.title('DBSCAN Clustering on Iris Dataset (eps=0.5, min_samples=5)')
plt.show()